/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TokenVesting, TokenVestingInterface } from "../TokenVesting";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "revocable",
        type: "bool",
      },
    ],
    name: "Awarded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Released",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "revokedAmount",
        type: "uint256",
      },
    ],
    name: "Revoked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "awards",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "released",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "revocable",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "revoked",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "getReleasableAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "getVestedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "releasedTotal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "revoke",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "targetToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingCliff",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingStart",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611794806100206000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063715018a61161008c5780638da5cb5b116100665780638da5cb5b146101f1578063d5a73fdd1461020f578063f2fde38b1461023f578063f3640e741461025b576100cf565b8063715018a61461019857806374a8f103146101a25780637b0e5f56146101be576100cf565b80631514617e146100d457806319165587146100f2578063198669db1461010e578063254800d41461012c5780632afd1a7d1461014a578063327107f71461017a575b600080fd5b6100dc610279565b6040516100e991906112c1565b60405180910390f35b61010c60048036038101906101079190610f19565b61027f565b005b6101166103b0565b60405161012391906112c1565b60405180910390f35b6101346103b6565b60405161014191906112c1565b60405180910390f35b610164600480360381019061015f9190610f19565b6103bc565b60405161017191906112c1565b60405180910390f35b6101826103ea565b60405161018f9190611184565b60405180910390f35b6101a0610410565b005b6101bc60048036038101906101b79190610f19565b61054d565b005b6101d860048036038101906101d39190610f19565b610826565b6040516101e894939291906112dc565b60405180910390f35b6101f9610870565b6040516102069190611140565b60405180910390f35b61022960048036038101906102249190610f19565b61089a565b60405161023691906112c1565b60405180910390f35b61025960048036038101906102549190610f19565b610920565b005b610263610acc565b60405161027091906112c1565b60405180910390f35b60675481565b600061028a826103bc565b9050600081116102cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c690611201565b60405180910390fd5b60006102da83610ad2565b9050818160010160008282546102f09190611353565b925050819055506103448383606a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610b1f9092919063ffffffff16565b81606860008282546103569190611353565b925050819055508273ffffffffffffffffffffffffffffffffffffffff167fb21fb52d5749b80f3182f8c6992236b5e5576681880914484d7f4c9b062e619e836040516103a391906112c1565b60405180910390a2505050565b60685481565b60655481565b6000806103c883610ba5565b905080602001516103d88461089a565b6103e29190611434565b915050919050565b606a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610418610c4e565b73ffffffffffffffffffffffffffffffffffffffff16610436610870565b73ffffffffffffffffffffffffffffffffffffffff161461048c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048390611221565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610555610c4e565b73ffffffffffffffffffffffffffffffffffffffff16610573610870565b73ffffffffffffffffffffffffffffffffffffffff16146105c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c090611221565b60405180910390fd5b60006105d482610ad2565b90508060020160009054906101000a900460ff16610627576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061e90611261565b60405180910390fd5b8060020160019054906101000a900460ff1615610679576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610670906112a1565b60405180910390fd5b6000610684836103bc565b90508082600101600082825461069a9190611353565b925050819055506000826001015483600001546106b79190611434565b905060018360020160016101000a81548160ff021916908315150217905550826001015483600001819055506107308483606a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610b1f9092919063ffffffff16565b61078461073b610870565b82606a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610b1f9092919063ffffffff16565b8373ffffffffffffffffffffffffffffffffffffffff167fb21fb52d5749b80f3182f8c6992236b5e5576681880914484d7f4c9b062e619e836040516107ca91906112c1565b60405180910390a28373ffffffffffffffffffffffffffffffffffffffff167f713b90881ad62c4fa8ab6bd9197fa86481fc0c11b2edba60026514281b2dbac48260405161081891906112c1565b60405180910390a250505050565b60696020528060005260406000206000915090508060000154908060010154908060020160009054906101000a900460ff16908060020160019054906101000a900460ff16905084565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000806108a683610ba5565b90506066544310156108bc57600091505061091b565b6067546065546108cc9190611353565b431015806108db575080606001515b156108ed57806000015191505061091b565b606754606554436108fe9190611434565b826000015161090d91906113da565b61091791906113a9565b9150505b919050565b610928610c4e565b73ffffffffffffffffffffffffffffffffffffffff16610946610870565b73ffffffffffffffffffffffffffffffffffffffff161461099c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099390611221565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a03906111c1565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60665481565b600080606960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905080915050919050565b610ba08363a9059cbb60e01b8484604051602401610b3e92919061115b565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610c56565b505050565b610bad610ec3565b6000606960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180608001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff161515151581526020016002820160019054906101000a900460ff161515151581525050905080915050919050565b600033905090565b6000610cb8826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610d1d9092919063ffffffff16565b9050600081511115610d185780806020019051810190610cd89190610f42565b610d17576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0e90611281565b60405180910390fd5b5b505050565b6060610d2c8484600085610d35565b90509392505050565b606082471015610d7a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d71906111e1565b60405180910390fd5b610d8385610e49565b610dc2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db990611241565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610deb9190611129565b60006040518083038185875af1925050503d8060008114610e28576040519150601f19603f3d011682016040523d82523d6000602084013e610e2d565b606091505b5091509150610e3d828286610e5c565b92505050949350505050565b600080823b905060008111915050919050565b60608315610e6c57829050610ebc565b600083511115610e7f5782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb3919061119f565b60405180910390fd5b9392505050565b604051806080016040528060008152602001600081526020016000151581526020016000151581525090565b600081359050610efe81611730565b92915050565b600081519050610f1381611747565b92915050565b600060208284031215610f2b57600080fd5b6000610f3984828501610eef565b91505092915050565b600060208284031215610f5457600080fd5b6000610f6284828501610f04565b91505092915050565b610f7481611468565b82525050565b610f838161147a565b82525050565b6000610f9482611321565b610f9e8185611337565b9350610fae8185602086016114d4565b80840191505092915050565b610fc3816114b0565b82525050565b6000610fd48261132c565b610fde8185611342565b9350610fee8185602086016114d4565b610ff781611565565b840191505092915050565b600061100f602683611342565b915061101a82611576565b604082019050919050565b6000611032602683611342565b915061103d826115c5565b604082019050919050565b6000611055601283611342565b915061106082611614565b602082019050919050565b6000611078602083611342565b91506110838261163d565b602082019050919050565b600061109b601d83611342565b91506110a682611666565b602082019050919050565b60006110be601183611342565b91506110c98261168f565b602082019050919050565b60006110e1602a83611342565b91506110ec826116b8565b604082019050919050565b6000611104600f83611342565b915061110f82611707565b602082019050919050565b611123816114a6565b82525050565b60006111358284610f89565b915081905092915050565b60006020820190506111556000830184610f6b565b92915050565b60006040820190506111706000830185610f6b565b61117d602083018461111a565b9392505050565b60006020820190506111996000830184610fba565b92915050565b600060208201905081810360008301526111b98184610fc9565b905092915050565b600060208201905081810360008301526111da81611002565b9050919050565b600060208201905081810360008301526111fa81611025565b9050919050565b6000602082019050818103600083015261121a81611048565b9050919050565b6000602082019050818103600083015261123a8161106b565b9050919050565b6000602082019050818103600083015261125a8161108e565b9050919050565b6000602082019050818103600083015261127a816110b1565b9050919050565b6000602082019050818103600083015261129a816110d4565b9050919050565b600060208201905081810360008301526112ba816110f7565b9050919050565b60006020820190506112d6600083018461111a565b92915050565b60006080820190506112f1600083018761111a565b6112fe602083018661111a565b61130b6040830185610f7a565b6113186060830184610f7a565b95945050505050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600061135e826114a6565b9150611369836114a6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561139e5761139d611507565b5b828201905092915050565b60006113b4826114a6565b91506113bf836114a6565b9250826113cf576113ce611536565b5b828204905092915050565b60006113e5826114a6565b91506113f0836114a6565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561142957611428611507565b5b828202905092915050565b600061143f826114a6565b915061144a836114a6565b92508282101561145d5761145c611507565b5b828203905092915050565b600061147382611486565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006114bb826114c2565b9050919050565b60006114cd82611486565b9050919050565b60005b838110156114f25780820151818401526020810190506114d7565b83811115611501576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f4e6f7468696e6720746f2072656c656173650000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f43616e6e6f74206265207265766f6b6564000000000000000000000000000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f416c7265616479207265766f6b65640000000000000000000000000000000000600082015250565b61173981611468565b811461174457600080fd5b50565b6117508161147a565b811461175b57600080fd5b5056fea2646970667358221220918bed8df56142d7155f620ac0b8e62fe53c923a076ee4ed168df022d218720c64736f6c63430008030033";

export class TokenVesting__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TokenVesting> {
    return super.deploy(overrides || {}) as Promise<TokenVesting>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TokenVesting {
    return super.attach(address) as TokenVesting;
  }
  connect(signer: Signer): TokenVesting__factory {
    return super.connect(signer) as TokenVesting__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenVestingInterface {
    return new utils.Interface(_abi) as TokenVestingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenVesting {
    return new Contract(address, _abi, signerOrProvider) as TokenVesting;
  }
}
