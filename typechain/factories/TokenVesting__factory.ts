/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TokenVesting, TokenVestingInterface } from "../TokenVesting";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "revocable",
        type: "bool",
      },
    ],
    name: "Awarded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Released",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "revokedAmount",
        type: "uint256",
      },
    ],
    name: "Revoked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "awards",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "released",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "revocable",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "revoked",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "getReleasableAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "getVestedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "revoke",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "targetToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingCliff",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingStart",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061173c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806374a8f1031161007157806374a8f103146101695780637b0e5f56146101855780638da5cb5b146101b8578063d5a73fdd146101d6578063f2fde38b14610206578063f3640e7414610222576100b4565b80631514617e146100b957806319165587146100d7578063254800d4146100f35780632afd1a7d14610111578063327107f714610141578063715018a61461015f575b600080fd5b6100c1610240565b6040516100ce9190611269565b60405180910390f35b6100f160048036038101906100ec9190610ec1565b610246565b005b6100fb61035e565b6040516101089190611269565b60405180910390f35b61012b60048036038101906101269190610ec1565b610364565b6040516101389190611269565b60405180910390f35b610149610392565b604051610156919061112c565b60405180910390f35b6101676103b8565b005b610183600480360381019061017e9190610ec1565b6104f5565b005b61019f600480360381019061019a9190610ec1565b6107ce565b6040516101af9493929190611284565b60405180910390f35b6101c0610818565b6040516101cd91906110e8565b60405180910390f35b6101f060048036038101906101eb9190610ec1565b610842565b6040516101fd9190611269565b60405180910390f35b610220600480360381019061021b9190610ec1565b6108c8565b005b61022a610a74565b6040516102379190611269565b60405180910390f35b60675481565b600061025182610364565b905060008111610296576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028d906111a9565b60405180910390fd5b60006102a183610a7a565b9050818160010160008282546102b791906112fb565b9250508190555061030b8383606960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610ac79092919063ffffffff16565b8273ffffffffffffffffffffffffffffffffffffffff167fb21fb52d5749b80f3182f8c6992236b5e5576681880914484d7f4c9b062e619e836040516103519190611269565b60405180910390a2505050565b60655481565b60008061037083610b4d565b9050806020015161038084610842565b61038a91906113dc565b915050919050565b606960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6103c0610bf6565b73ffffffffffffffffffffffffffffffffffffffff166103de610818565b73ffffffffffffffffffffffffffffffffffffffff1614610434576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042b906111c9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6104fd610bf6565b73ffffffffffffffffffffffffffffffffffffffff1661051b610818565b73ffffffffffffffffffffffffffffffffffffffff1614610571576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610568906111c9565b60405180910390fd5b600061057c82610a7a565b90508060020160009054906101000a900460ff166105cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c690611209565b60405180910390fd5b8060020160019054906101000a900460ff1615610621576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061890611249565b60405180910390fd5b600061062c83610364565b90508082600101600082825461064291906112fb565b9250508190555060008260010154836000015461065f91906113dc565b905060018360020160016101000a81548160ff021916908315150217905550826001015483600001819055506106d88483606960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610ac79092919063ffffffff16565b61072c6106e3610818565b82606960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610ac79092919063ffffffff16565b8373ffffffffffffffffffffffffffffffffffffffff167fb21fb52d5749b80f3182f8c6992236b5e5576681880914484d7f4c9b062e619e836040516107729190611269565b60405180910390a28373ffffffffffffffffffffffffffffffffffffffff167f713b90881ad62c4fa8ab6bd9197fa86481fc0c11b2edba60026514281b2dbac4826040516107c09190611269565b60405180910390a250505050565b60686020528060005260406000206000915090508060000154908060010154908060020160009054906101000a900460ff16908060020160019054906101000a900460ff16905084565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008061084e83610b4d565b90506066544310156108645760009150506108c3565b60675460655461087491906112fb565b43101580610883575080606001515b156108955780600001519150506108c3565b606754606554436108a691906113dc565b82600001516108b59190611382565b6108bf9190611351565b9150505b919050565b6108d0610bf6565b73ffffffffffffffffffffffffffffffffffffffff166108ee610818565b73ffffffffffffffffffffffffffffffffffffffff1614610944576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093b906111c9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156109b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ab90611169565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60665481565b600080606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905080915050919050565b610b488363a9059cbb60e01b8484604051602401610ae6929190611103565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610bfe565b505050565b610b55610e6b565b6000606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180608001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff161515151581526020016002820160019054906101000a900460ff161515151581525050905080915050919050565b600033905090565b6000610c60826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610cc59092919063ffffffff16565b9050600081511115610cc05780806020019051810190610c809190610eea565b610cbf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb690611229565b60405180910390fd5b5b505050565b6060610cd48484600085610cdd565b90509392505050565b606082471015610d22576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1990611189565b60405180910390fd5b610d2b85610df1565b610d6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d61906111e9565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610d9391906110d1565b60006040518083038185875af1925050503d8060008114610dd0576040519150601f19603f3d011682016040523d82523d6000602084013e610dd5565b606091505b5091509150610de5828286610e04565b92505050949350505050565b600080823b905060008111915050919050565b60608315610e1457829050610e64565b600083511115610e275782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5b9190611147565b60405180910390fd5b9392505050565b604051806080016040528060008152602001600081526020016000151581526020016000151581525090565b600081359050610ea6816116d8565b92915050565b600081519050610ebb816116ef565b92915050565b600060208284031215610ed357600080fd5b6000610ee184828501610e97565b91505092915050565b600060208284031215610efc57600080fd5b6000610f0a84828501610eac565b91505092915050565b610f1c81611410565b82525050565b610f2b81611422565b82525050565b6000610f3c826112c9565b610f4681856112df565b9350610f5681856020860161147c565b80840191505092915050565b610f6b81611458565b82525050565b6000610f7c826112d4565b610f8681856112ea565b9350610f9681856020860161147c565b610f9f8161150d565b840191505092915050565b6000610fb76026836112ea565b9150610fc28261151e565b604082019050919050565b6000610fda6026836112ea565b9150610fe58261156d565b604082019050919050565b6000610ffd6012836112ea565b9150611008826115bc565b602082019050919050565b60006110206020836112ea565b915061102b826115e5565b602082019050919050565b6000611043601d836112ea565b915061104e8261160e565b602082019050919050565b60006110666011836112ea565b915061107182611637565b602082019050919050565b6000611089602a836112ea565b915061109482611660565b604082019050919050565b60006110ac600f836112ea565b91506110b7826116af565b602082019050919050565b6110cb8161144e565b82525050565b60006110dd8284610f31565b915081905092915050565b60006020820190506110fd6000830184610f13565b92915050565b60006040820190506111186000830185610f13565b61112560208301846110c2565b9392505050565b60006020820190506111416000830184610f62565b92915050565b600060208201905081810360008301526111618184610f71565b905092915050565b6000602082019050818103600083015261118281610faa565b9050919050565b600060208201905081810360008301526111a281610fcd565b9050919050565b600060208201905081810360008301526111c281610ff0565b9050919050565b600060208201905081810360008301526111e281611013565b9050919050565b6000602082019050818103600083015261120281611036565b9050919050565b6000602082019050818103600083015261122281611059565b9050919050565b600060208201905081810360008301526112428161107c565b9050919050565b600060208201905081810360008301526112628161109f565b9050919050565b600060208201905061127e60008301846110c2565b92915050565b600060808201905061129960008301876110c2565b6112a660208301866110c2565b6112b36040830185610f22565b6112c06060830184610f22565b95945050505050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006113068261144e565b91506113118361144e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611346576113456114af565b5b828201905092915050565b600061135c8261144e565b91506113678361144e565b925082611377576113766114de565b5b828204905092915050565b600061138d8261144e565b91506113988361144e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156113d1576113d06114af565b5b828202905092915050565b60006113e78261144e565b91506113f28361144e565b925082821015611405576114046114af565b5b828203905092915050565b600061141b8261142e565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006114638261146a565b9050919050565b60006114758261142e565b9050919050565b60005b8381101561149a57808201518184015260208101905061147f565b838111156114a9576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f4e6f7468696e6720746f2072656c656173650000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f43616e6e6f74206265207265766f6b6564000000000000000000000000000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f416c7265616479207265766f6b65640000000000000000000000000000000000600082015250565b6116e181611410565b81146116ec57600080fd5b50565b6116f881611422565b811461170357600080fd5b5056fea2646970667358221220a84ab2a433dbe228e501f4ad3dac7a99767332c4dd82dfd817e77a22f929b5e964736f6c63430008030033";

export class TokenVesting__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TokenVesting> {
    return super.deploy(overrides || {}) as Promise<TokenVesting>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TokenVesting {
    return super.attach(address) as TokenVesting;
  }
  connect(signer: Signer): TokenVesting__factory {
    return super.connect(signer) as TokenVesting__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenVestingInterface {
    return new utils.Interface(_abi) as TokenVestingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenVesting {
    return new Contract(address, _abi, signerOrProvider) as TokenVesting;
  }
}
